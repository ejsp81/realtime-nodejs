ul.listEvents
script.
  var socket = io();
  getSoccerGame(true);        
  getEvents();
  function insertDetail(event,carga){ 
    if ($("#selSoccerGame").val()==event.tournament_result._id) {
      var img; 
      switch (event.type_event) {
        case 'YELLOW_CARD':
          img='yellow'
          break;
        case 'RED_CARD':
          img='red'
          break;
        case 'GOAL':
          img='balon'
          break;  
        case 'PENAL':
        img='penal'
          break;
      }      
      if (event.isLocalEvent){
        $('.listEvents').append(`
        <li style="width:50%">
          <div class="msj macro">
          <div class="avatar"><img class="img-circle" src="${event.player.team.shield}" /></div>
            <div class="text text-l">
              <p>${event.type_event}<img style="width:20%;height:10%" src="/${img}.png" /></p>
              <p>${event.player.name}</p>
              <p><small>Minuto: ${event.time}</small></p>            
            </div>
          </div>
        </li>`)                   
      }else if(!event.isLocalEvent){        
        if ((event.type_event=='FIRST_TIME'||event.type_event=='END_GAME')){
          var soccerGame= $('select[name="selSoccerGame"] option:selected').text();
          $('.listEvents').append(`
          <li style="width:50%;margin-left:20%">
            <div class="msj-rta macro text text-center">
              <h3>${event.type_event}</h3>
            </div>
          </li>`)  
          if((event.type_event=='END_GAME') && !carga){
            messageToast("El Juego entre "+soccerGame+" Ha Finalizado");
          }else if((event.type_event=='FIRST_TIME') && ($('#stateMatch').text()=='en vivo')){
            messageToast("El primer tiempo ha finalizado");
          }
        } else{    
          $('.listEvents').append(`
          <li style="width:50%;margin-left:40%">
            <div class="msj-rta macro">
              <div class="text text-r">
                <p>${event.type_event}<img style="width:20%;height:10%" src="/${img}.png" /></p>
                <p>${event.player.name}</p>
                <p><small>Minuto: ${event.time}</small></p>
              </div>
            <div class="avatar" style="padding:0px 0px 0px 0px !important"><img class="img-circle" src="${event.player.team.shield}" /></div>
          </li>`)
        }
      } 
    }     
  }
  var playerL,playerV,isLocal,shieldL,shieldV,idTr;
  //Seleccionar Jugador
  $("input[name='radio']").change(async function(){
    $('#selPlayer').children('option:not(:first)').remove();
    if ($(this).attr("id")==='teamEventL') {
        playerL.forEach(addPlayer);
        isLocal=true;
    } else {
      playerV.forEach(addPlayer);
      isLocal=false;
    }
  });

  function resetEvents(){
    $('.listEvents').empty();
  }
  //llena combos Jugadores
  function addPlayer(player){
      $("#selPlayer").append(`
        <option value=${player._id}>${player.name}</option>`)
  }
  //Selecciona partidos en juego
  $("select#selSoccerGame").change(async function(){
    resetEvents();
    resetResult()
    //obtiene partidos en juego
    var local_team,visitor_team;
    let soccerGame = await fetch('/tournament_results/'+$("#selSoccerGame").val());
    if (soccerGame.ok) {
      let json =  soccerGame.json();
      json.then(async (team)=>{
        shieldL=team.local_team.shield;  
        shieldV=team.visitor_team.shield;  
        $("#lblTL").text(team.local_team.name);
        $("#lblTv").html(team.visitor_team.name);
        idTr=team._id;
        resetResult()
        addResult(team);
        local_team=team.local_team._id;
        visitor_team=team.visitor_team._id;
        var match = $('.row-match#'+team._id);
        if(!team.is_playing){
          match.find('.badge.is_playing')
            .removeClass('badge-success').addClass('badge-secondary')
            .html('finalizado');
            $("#live").attr("id","notlive");
        }
      })
      
    } else {
      alert("HTTP-Error: " + soccerGame.status);
    }
    //obtiene eventos del partido
    let details = await fetch('/detail_matchs/getByTournamentResult/'+$("#selSoccerGame").val());
    if (details.ok) {
      let json =  details.json();
      json.then(async (details)=>{   
        details.forEach(detail => {
          insertDetail(detail,true);
        });
        
      })
    } else {
      alert("HTTP-Error: " + details.status);
    } 
    //obtiene jugadores de cada equipo
    let playersL = await fetch('/players/getByTeam/'+local_team);              
    if (playersL.ok) {
      let json =  playersL.json();
      json.then(players=>{                                  
        playerL=players;
      })
    } else {
      alert("HTTP-Error: " + playersL.status);
    }  
    let playersV = await fetch('/players/getByTeam/'+visitor_team);              
    if (playersV.ok) {
      let json =  playersV.json();
      json.then(players=>{                                   
        playerV=players;
      })
    } else {
      alert("HTTP-Error: " + playersV.status);
    } 
  });
  $(function () {
    $( "#btnTeam" ).click(function(e) {
      e.preventDefault(); 
      if ( $('#stateMatch').text()=='finalizado') {
        messageToast("El Juego ha Finalizado, No es posible agregar mas eventos");
      } else {
        var player= $('select[name="selPlayer"] option:selected').text();
        var shield=isLocal?shieldL:shieldV,data; 
        data={
          tournament_result: $("#selSoccerGame").val(), 
          type_event: $("#selEvent").val(), 
          player: $("#selPlayer").val(), 
          time: $("#currentTime").html(), 
          isLocalEvent:isLocal};
        createEvents(data)
        if ($("#selEvent").val()==='GOAL') {
          if (isLocal) {
            data={
              local_goals:parseInt($("#goalLocal").html())+1
            }
          } else {
            data={
              visitor_goals:parseInt($("#goalVisitor").html())+1
            }
          }
          updateTr(data,$("#selSoccerGame").val());
        }
      } 
    });  
  }); 
  function updateTr(data,tr){
    fetch('/tournament_results/'+tr+'/update', {
      method: 'PUT',
      headers: {
          'Content-Type': 'application/json'
      },
      body: JSON.stringify(data)
    });
  }  
  function createEvents(data){
    fetch('/detail_matchs/create', {
      method: 'POST',
      headers: {
          'Content-Type': 'application/json'
      },
      body: JSON.stringify(data)
    });
  }   
  //llena combo Partidos
  function addSoccerGame(soccerGame){
    $("#selSoccerGame").append(`
      <option value=${soccerGame._id}>${soccerGame.local_team.name} vs ${soccerGame.visitor_team.name}</option>
    `)
  } 
  //obtiene Partidos en juego  
  function getSoccerGame(is_playing){
    
    $.get('/tournament_results/getIsPlaying/'+is_playing, (data) => {
      data.forEach(addSoccerGame);                
    });
  }
  //llena combos Eventos
  function addEvent(events){
    $("#selEvent").append(`
      <option value=${events.name}>${events.name}</option>`)
  }  
  //obtiene Eventos 
  function getEvents(){            
    $.get('/events/get', (data) => {
      data.forEach(addEvent);
    });
  }
  function addResult(data){
    var rowHtml = `<div class="row row-match justify-content-center pb-3" id="${data._id}">
        <div class="col col-xs-2 text-center align-middle">
          <img src="${data.local_team.shield}" width="70px"/><br>
          ${data.local_team.name}
        </div>
        <div class="col-xs-auto text-center align-middle">
          <h2><span class="goalLocal" id=goalLocal>${data.local_goals}</span> - <span class="goalVisitor"id=goalVisitor>${data.visitor_goals}</span></h2>
          <h4>min. <span class="currentTime" id=currentTime>${data.current_time}</span></h4>
          <h6><span id=stateMatch class="badge is_playing badge-`+(data.is_playing ? 'success">en vivo' : 'secondary">finalizado')+`</span></h6>
          <div id="live">
          </div>
          
        </div>
        <div class="col col-xs-2 text-center align-middle">
          <img src="${data.visitor_team.shield}" width="70px"/><br>
          ${data.visitor_team.name}
        </div>
      </div>`;
      $('#result').append(rowHtml);
  }

  $('#check1').change(function() {
    $('#selSoccerGame').children('option:not(:first)').remove();
    resetEvents();
    resetResult()
    if(this.checked) {
      getSoccerGame(true);  
    }else{
      getSoccerGame(false);  
    }      
  });

  function resetResult(){
     $('.row-match#'+idTr).remove();
  }
   //Escucha cambios en 
  socket.on('changeDetailMatch', function(event){
    insertDetail(event,false);
  });
  
  //Escucha cambios en ournamentResult
  socket.on('updateTournamentResult', function(tr){
    if ($("#selSoccerGame").val()==tr._id) {
      $("#currentTime").html(tr.current_time);
      $("#goalLocal").html(tr.local_goals)
      $("#goalVisitor").html(tr.visitor_goals)
      var match = $('.row-match#'+tr._id);
      if(!tr.is_playing){
        match.find('.badge.is_playing')
          .removeClass('badge-success').addClass('badge-secondary')
          .html('finalizado');
          $("#live").attr("id","notlive");
      }
    }
  });
  socket.on('insertTournamentResult', function(tr){
    addSoccerGame(tr)
    messageToast(tr.local_team.name+' vs ' +tr.visitor_team.name+" Ha iniciado");
  });

  function messageToast(msj){
     $.toast({ 
      text : msj, 
      showHideTransition : 'slide',  // It can be plain, fade or slide
      bgColor : 'blue',              // Background color for toast
      textColor : '#eee',            // text color
      allowToastClose : true,       // Show the close button or not
      hideAfter : 5000,              // `false` to make it sticky or time in miliseconds to hide after
      stack : 5,                     // `fakse` to show one stack at a time count showing the number of toasts that can be shown at once
      textAlign : 'left',            // Alignment of text i.e. left, right, center
      position : 'mid-center'      // bottom-left or bottom-right or bottom-center or top-left or top-right or top-center or mid-center or an object representing the left, right, top, bottom values to position the toast on page
    })
  }